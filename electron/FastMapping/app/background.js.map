{"version":3,"sources":["webpack://FastMapping/./src/background.js","webpack://FastMapping/external \"electron\"","webpack://FastMapping/external \"electron-log\"","webpack://FastMapping/external \"execa\"","webpack://FastMapping/external \"fs\"","webpack://FastMapping/external \"fs-jetpack\"","webpack://FastMapping/external \"net\"","webpack://FastMapping/external \"path\"","webpack://FastMapping/webpack/bootstrap","webpack://FastMapping/webpack/runtime/compat get default export","webpack://FastMapping/webpack/runtime/define property getters","webpack://FastMapping/webpack/runtime/hasOwnProperty shorthand","webpack://FastMapping/webpack/runtime/make namespace object","webpack://FastMapping/webpack/startup"],"names":["app","session","BrowserWindow","Menu","require","MACOS","WINDOWS","fs","backgroundColor","waitFor","milliseconds","Promise","resolve","_reject","setTimeout","log","info","net","srv","createServer","sock","end","listen","console","address","port","NODER","process","platform","rResources","path","getAppPath","rVer","readdirSync","filter","fn","match","toString","rShinyProcess","shutdown","mainWindow","loadingSplashScreen","errorSplashScreen","createWindow","shinyUrl","width","height","show","icon","fullscreen","frame","titleBarStyle","webPreferences","nodeIntegration","contextIsolation","on","tryStartWebserver","attempt","progressCallback","onErrorStartup","onErrorLater","onSuccess","code","shinyRunning","onError","e","error","shinyProcessAlreadyDead","execa","env","catch","i","loadURL","webContents","executeJavaScript","then","result","close","kill","splashScreenOptions","createSplashScreen","filename","splashScreen","createLoadingSplashScreen","createErrorScreen","setApplicationMenu","defaultSession","webRequest","onHeadersReceived","_","callback","responseHeaders","emitSpashEvent","event","data","send","destroy","url","quit"],"mappings":"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","file":"background.js","sourcesContent":["/*Some parts of this have been rewritten and/or replaced with \r\ncode from https://github.com/dirkschumacher/r-shiny-electron\r\nMIT License\r\n\r\nCopyright (c) 2018 Dirk Schumacher, Noam Ross, Rich FitzJohn\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.*/\r\n\r\n\r\n\r\n// Modules to control application life and create native browser window\r\nconst {\r\n  app,\r\n  session,\r\n  BrowserWindow,\r\n  Menu\r\n} = require('electron');\r\n\r\nimport jetpack from \"fs-jetpack\";\r\nimport execa from 'execa'\r\nimport path from \"path\";\r\n\r\nconst MACOS = \"darwin\";\r\nconst WINDOWS = \"win32\";\r\n\r\nconst fs = require('fs');\r\nconst backgroundColor = '#2c3e50'\r\n\r\n\r\nconst waitFor = (milliseconds) => {\r\n  return new Promise((resolve, _reject) => {\r\n    setTimeout(resolve, milliseconds);\r\n  })\r\n}\r\n\r\n// Log to:\r\n//Linux: ~/.config/<app name>/log.log\r\n//macOS: ~/Library/Logs/<app name>/log.log\r\n//Windows: %USERPROFILE%\\AppData\\Roaming\\<app name>\\log.log\r\nconst log = require('electron-log');\r\nlog.info('Application Started');\r\n\r\n\r\n//Find and bind an open port\r\n//Assigned port can be accesssed with srv.address().port\r\nvar net = require('net');\r\nvar srv = net.createServer(function(sock) {\r\n  sock.end('Hello world\\n');\r\n});\r\nsrv.listen(0, function() {\r\n  console.log('Listening on port ' + srv.address().port);\r\n});\r\n\r\nlet NODER = null\r\n// folder above \"bin/RScript\"\r\nif (process.platform == WINDOWS) {\r\n  var rResources = path.join(app.getAppPath(), 'app', 'r_lang');\r\n  //Unfortunately on MacOS paths are hardcoded into \r\n  //Rscript but it's in binary so have to use R instead\r\n  NODER = path.join(rResources, \"bin\", \"x64\", \"Rterm.exe\");\r\n}\r\n\r\nif (process.platform == MACOS) {\r\n  var rVer = fs.readdirSync(path.join(app.getAppPath(), 'app', 'r_lang', \"Library\", \"Frameworks\", \"R.framework\", \"Versions\")).filter(fn => fn.match(/\\d+\\.(?:\\d+|x)(?:\\.\\d+|x){0,1}/g));\r\n  var rResources = path.join(app.getAppPath(), 'app', 'r_lang', \"Library\", \"Frameworks\", \"R.framework\", \"Versions\", rVer.toString(), 'Resources');\r\n  //Unfortunately on MacOS paths are hardcoded into \r\n  //Rscript but it's in binary so have to use R instead\r\n\r\n  NODER = path.join(rResources, \"bin\", \"R\");\r\n}\r\n\r\nlet rShinyProcess = null\r\nlet shutdown = false\r\n// Keep a global reference of the window object, if you don't, the window will\r\n// be closed automatically when the JavaScript object is garbage collected.\r\nlet mainWindow\r\nlet loadingSplashScreen\r\nlet errorSplashScreen\r\n\r\nconst createWindow = (shinyUrl) => {\r\n  mainWindow = new BrowserWindow({\r\n    width: 1200,\r\n    height: 750,\r\n    show: false,\r\n    icon: 'FastMapping.ico',\r\n    fullscreen: false,\r\n    frame: true,\r\n    titleBarStyle: 'hidden',\r\n    webPreferences: {\r\n      nodeIntegration: false,\r\n      contextIsolation: true\r\n    }\r\n  })\r\n  mainWindow.on('closed', () => {\r\n    mainWindow = null\r\n  })\r\n}\r\n\r\n\r\n// tries to start a webserver\r\n// attempt - a counter how often it was attempted to start a webserver\r\n// use the progress call back to listen for intermediate status reports\r\n// use the onErrorStartup callback to react to a critical failure during startup\r\n// use the onErrorLater callback to handle the case when the R process dies\r\n// use onSuccess to retrieve the shinyUrl\r\nconst tryStartWebserver = async (attempt, progressCallback, onErrorStartup,\r\n  onErrorLater, onSuccess) => {\r\n  if (attempt > 3) {\r\n    await progressCallback({\r\n      attempt: attempt,\r\n      code: 'failed'\r\n    })\r\n    await onErrorStartup()\r\n    return\r\n  }\r\n\r\n  if (rShinyProcess !== null) {\r\n    await onErrorStartup() // should not happen\r\n    return\r\n  }\r\n\r\n\r\n  await progressCallback({\r\n    attempt: attempt,\r\n    code: 'start'\r\n  })\r\n\r\n  let shinyRunning = false\r\n  const onError = async (e) => {\r\n    console.error(e)\r\n    rShinyProcess = null\r\n    if (shutdown) { // global state :(\r\n      return\r\n    }\r\n    if (shinyRunning) {\r\n      await onErrorLater()\r\n    } else {\r\n      await tryStartWebserver(attempt + 1, progressCallback, onErrorStartup, onErrorLater, onSuccess)\r\n    }\r\n  }\r\n\r\n  let shinyProcessAlreadyDead = false\r\n\r\n  rShinyProcess = execa(NODER,\r\n    ['--vanilla', '-e', 'FastMapping::run_app(options = list(port = ' + srv.address().port + '))'], {\r\n      env: {\r\n        //Necessary for letting R know where it is and ensure we're not using another R \r\n        'WITHIN_ELECTRON': 'T', // can be used within an app to implement specific behaviour\r\n        'RHOME': rResources,\r\n        'R_HOME_DIR': rResources,\r\n        'R_LIBS': path.join(rResources, \"library\"),\r\n        'R_LIBS_USER': path.join(rResources, \"library\"),\r\n        'R_LIBS_SITE': path.join(rResources, \"library\"),\r\n        'R_LIB_PATHS': path.join(rResources, \"library\")\r\n      }\r\n    }).catch((e) => {\r\n    shinyProcessAlreadyDead = true\r\n    onError(e)\r\n  })\r\n\r\n\r\n\r\n  for (let i = 0; i <= 10; i++) {\r\n    if (shinyProcessAlreadyDead) {\r\n      break\r\n    }\r\n\r\n    try {\r\n      if (shinyRunning === false) {\r\n        mainWindow.loadURL('http://127.0.0.1:' + srv.address().port);\r\n            await waitFor(i * 1000)\r\n\r\n        mainWindow.webContents.executeJavaScript('window.Shiny.shinyapp.isConnected()', true)\r\n          .then((result) => {\r\n            shinyRunning = true\r\n            mainWindow.show()\r\n            loadingSplashScreen.close()\r\n            console.log('Trying to connect to Shiny... connected')\r\n          })\r\n          .catch((result) => {\r\n\r\n          if (shinyRunning === false) {\r\n            console.log('Trying to connect to Shiny... ' + i)\r\n          }\r\n\r\n          })\r\n\r\n      } \r\n    } catch (e) {\r\n\r\n    }\r\n\r\n\r\n  }\r\n  await progressCallback({\r\n    attempt: attempt,\r\n    code: 'notresponding'\r\n  })\r\n\r\n  try {\r\n    rShinyProcess.kill()\r\n  } catch (e) {}\r\n}\r\n\r\n\r\n\r\nconst splashScreenOptions = {\r\n  width: 500,\r\n  height: 200,\r\n  frame: false,\r\n  icon: 'FastMapping.ico',\r\n  backgroundColor: backgroundColor\r\n}\r\n\r\nconst createSplashScreen = (filename) => {\r\n  let splashScreen = new BrowserWindow(splashScreenOptions)\r\n  splashScreen.loadURL(path.join(app.getAppPath(), 'app', filename + '.html'))\r\n  splashScreen.on('closed', () => {\r\n    splashScreen = null\r\n  })\r\n  return splashScreen\r\n}\r\n\r\nconst createLoadingSplashScreen = () => {\r\n  loadingSplashScreen = createSplashScreen('loading')\r\n}\r\n\r\nconst createErrorScreen = () => {\r\n  errorSplashScreen = createSplashScreen('failed')\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// This method will be called when Electron has finished\r\n// initialization and is ready to create browser windows.\r\n// Some APIs can only be used after this event occurs.\r\napp.on('ready', async () => {\r\n\r\n  createWindow()\r\n  // Menu\r\n  // Set null Menu\r\n  Menu.setApplicationMenu(null);\r\n\r\n  // Set a content security policy\r\n  session.defaultSession.webRequest.onHeadersReceived((_, callback) => {\r\n    callback({\r\n      responseHeaders: `\r\n        default-src 'none';\r\n        script-src 'self';\r\n        img-src 'self' data:;\r\n        style-src 'self';\r\n        font-src 'self';\r\n      `\r\n    })\r\n  })\r\n\r\n  // Deny all permission requests\r\n  /*  session.defaultSession.setPermissionRequestHandler((_1, _2, callback) => {\r\n      callback(false)\r\n    })\r\n  */\r\n  createLoadingSplashScreen()\r\n\r\n  const emitSpashEvent = async (event, data) => {\r\n    try {\r\n      await loadingSplashScreen.webContents.send(event, data)\r\n    } catch (e) {}\r\n  }\r\n\r\n  // pass the loading events down to the loadingSplashScreen window\r\n  const progressCallback = async (event) => {\r\n    await emitSpashEvent('start-webserver-event', event)\r\n  }\r\n\r\n  const onErrorLater = async () => {\r\n    if (!mainWindow) { // fired when we quit the app\r\n      return\r\n    }\r\n    createErrorScreen()\r\n    await errorSplashScreen.show()\r\n    mainWindow.destroy()\r\n  }\r\n\r\n  const onErrorStartup = async () => {\r\n    await waitFor(1000) // TODO: hack, only emit if the loading screen is ready\r\n    await emitSpashEvent('failed')\r\n  }\r\n\r\n  await tryStartWebserver(0, progressCallback, onErrorStartup, onErrorLater, (url) => {\r\n\r\n \r\n\r\n  })\r\n\r\n})\r\n\r\n// Quit when all windows are closed.\r\napp.on('window-all-closed', () => {\r\n  // On OS X it is common for applications and their menu bar\r\n  // to stay active until the user quits explicitly with Cmd + Q\r\n  // if (process.platform !== 'darwin') {\r\n  // }\r\n  // We overwrite the behaviour for now as it makes things easier\r\n  // remove all events\r\n  shutdown = true\r\n  app.quit()\r\n\r\n  // kill the process, just in case\r\n  // usually happens automatically if the main process is killed\r\n  try {\r\n    rShinyProcess.kill()\r\n  } catch (e) {}\r\n})\r\n\r\napp.on('activate', () => {\r\n  // On OS X it's common to re-create a window in the app when the\r\n  // dock icon is clicked and there are no other windows open.\r\n  //if (mainWindow === null) {\r\n  //  createWindow()\r\n  //}\r\n  // Deactivated for now\r\n})\r\n","module.exports = require(\"electron\");;","module.exports = require(\"electron-log\");;","module.exports = require(\"execa\");;","module.exports = require(\"fs\");;","module.exports = require(\"fs-jetpack\");;","module.exports = require(\"net\");;","module.exports = require(\"path\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/background.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}